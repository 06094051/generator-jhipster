import * as React from 'react';
import { Translate } from 'react-jhipster';

import { TrackerService } from 'app/config/websocket-middleware';

export interface ITrackerPageProps {
  tracker: any;
}

export interface ITrackerPageState {
  activities: any[];
}

export default class TrackerPage extends React.Component<ITrackerPageProps, ITrackerPageState> {
  state: ITrackerPageState = {
    activities: []
  };

  componentDidMount() {
    TrackerService.subscribe();
    TrackerService.receive().subscribe(activity => {
      this.showActivity(activity);
    });
  }

  componentWillUnmount() {
    TrackerService.unsubscribe();
  }

  showActivity(activity: any) {
    let existingActivity = false;
    const activities = this.state.activities;
    for (let index = 0; index < activities.length; index++) {
      if (activities[index].sessionId === activity.sessionId) {
        existingActivity = true;
        if (activity.page === 'logout') {
          activities.splice(index, 1);
        } else {
          activities[index] = activity;
        }
      }
    }
    if (!existingActivity && (activity.page !== 'logout')) {
      activities.push(activity);
    }
    this.setState({ activities });
  }

  render() {
    const activities = this.state.activities;
    return (
      <div>
        <h2>
          <Translate contentKey="tracker.title">Real-time user activities</Translate>
        </h2>
        <table className="table table-sm table-striped table-bordered">
          <thead>
            <tr>
              <th>
                <span>
                  <Translate contentKey="tracker.table.userlogin">User</Translate>
                </span>
              </th>
              <th>
                <span>
                  <Translate contentKey="tracker.table.ipaddress">IP Address</Translate>
                </span>
              </th>
              <th>
                <span>
                  <Translate contentKey="tracker.table.page">Current page</Translate>
                </span>
              </th>
              <th>
                <span>
                  <Translate contentKey="tracker.table.time">Time</Translate>
                </span>
              </th>
            </tr>
          </thead>
          <tbody>
            {activities.map((activity, i) => (
              <tr key={`log-row-${i}`}>
                <td>{activity.userLogin}</td>
                <td>{activity.ipAddress}</td>
                <td>{activity.page}</td>
                <td>{activity.time}</td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>
    );
  }
}
