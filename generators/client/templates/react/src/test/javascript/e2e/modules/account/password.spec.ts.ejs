import PasswordPage from '../../page-objects/password-page';
import SignInPage from '../../page-objects/signin-page';
import NavBarPage from '../../page-objects/navbar-page';

import { browser, ExpectedConditions } from 'protractor';
import { translate } from 'react-jhipster';

const expect = chai.expect;

describe('Password change', () => {
  let signInPage: SignInPage;
  let passwordPage: PasswordPage;
  let navBarPage: NavBarPage;

  before(() => {
    signInPage = new SignInPage();
    passwordPage = new PasswordPage();
    navBarPage = new NavBarPage();
    signInPage.get();
  });

  it('should fail to update password when using incorrect current password', async () => {
    signInPage.autoSignInUsing('admin', 'admin');

    signInPage.waitUntilHidden();
    navBarPage.clickOnAccountMenuItem('password');

    passwordPage.setCurrentPassword('wrong_current_password');
    passwordPage.setPassword('new_password');
    passwordPage.setConfirmPassword('new_password');
    passwordPage.save();

    const errorMessage = 'password.messages.error';
    browser.wait(() => {
      expect(passwordPage.getAlertMessage().getText()).to.eq(translate(errorMessage));
    }, 1000);
  });

  after(() => {
    signInPage.autoSignOut();
  });
});
